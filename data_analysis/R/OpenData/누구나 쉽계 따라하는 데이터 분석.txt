누구나 쉽게 따라하는 데이터 분석

2. 데이터 분석을 위한 필요지식
## 데이터 분석을 위해 필요한 역량
# 데이터 처리 능력
# 빅데이터 프로그래밍 능력
  - R & Python
# 기초지식 및 이론 이해능력
  - 수학적 기초지식과 이론 이해 능력
# 융합문제해결 및 직업윤리 준수 능력
# 빅데이터 기획능력
  - 비지니스 영역별 빅데이터의 활용 가능성을 탐색하고 비즈니스 모델화할 수 있는 능력
# 빅데이터 시각화 능력
# 빅데이터 분석 능력  

## 데이터 분석에 필요한 요소
# 데이터 분석을 위한 단계
  - 데이터 수집 단계 - 먼저 발굴하고자 하는 지식과 관련된 다양한 데이터 소스로 부터 데이터를 수집
  - 데이터 전처리 단계 - 수집한 데이터에서 필요 없는 데이터를 필터링하거나 적절한 형태로 가공
  - 데이터 저장 및 관리 단계 - 데이터를 체계적으로 저장
  - 데이터 분석 단계 - 다양한 형태의 데이터를 분석 
  - 지식 시각화 단계 - 다양한 데이터가 만들어 내는 패턴들을 시각화

## 데이터 분석 도구
# 데이터 분석을 위한 TOOL
  - 엑셀 
  - R  
  - MATLAB
  - 데이터 분석 도구를 사용
  - Python
  - SQL
  - SAS
# R이란?
  - R은 오픈소스 프로그램으로 통계/데이터 마이닝 및 그래프를 위한 언어
  - 빅데이터 분석을 목적으로 주목을 받고 있으며, 5000개가 넘는 패키지들이 다양한 기능을 지원
  - 구글, 아마존 클라우드 서비스와 연동, 호환성 좋음
# R의 장점
  - 무료
  - 활성화된 사용자 커뮤니티
  - 각종 통계 패키지 제공
  - 다른 프로그래밍 언어보다 쉬움
  - 쉬운 한글 처리
  - 뛰어난 시각화  
## 빅데이터 시대를 위한 준비
# 데이터 분석 관련 자격증
  - 데이터분석준전문가 - ADsP(Advanced Data Analytics Semi-Professional)
  - 빅데이터분석기사
# 데이터 분석 관련 공모전

3. R과 R스튜디오 설치 및 사용자
## R 설치

## R Studio 설치
  - R을 효과적으로 편리하게 사용할 수 있도록 도와주는 통합개발환경(IDE)
## R Studio 실행
# Script 창
  - 코드를 작성하는 창
  - Console과 달리 긴 코드 작성에 용의
  - 필요한 부분만 선택하여 실행 가능
  - 사용한 코드를 별도 파일(.R)로 저장 및 불러오기 기능
  - 함수에 대한 자동 완성 기능 제공
# Console 창
  - 코드 실행 및 결과, 오류 확인 등(R GUI)
# Environment / History /Connections 창
  - Environment : 입력된 데이터 세트, 변수 확인
  - History : 실행한 명령어, 결과 등 확인
  - Connections : DB 서버와 연결 관리  

# Files 창 / Plots 창 / Packages 창 / Help 창 / Viewer 창
  - Files : 파일 탐색기
  - Plots : 그래프 출력
  - Packages : 패키지 관리
  - Help : 도움말
  - Views : 그래프 웹 브라우저 출력
# 시작 폴더(작업공간) 설정
  - R Studio에서 [Tools] -> [Global Options]
  - [General] -> [Default working directory]
  - [C:/Opendata] 설정 - 각자 원하는 작업 폴더 설정  
# UTF-8 설정(한글 지원)  
  - [Tools] -> [Global Options]
  - [Code] -> [ Saving]
  - Default text encoding -> UTF-8

4. 데이터 구조 및 기초함수
## R 기본 개념
# 데이터 구조, 변수, 값
  - 데이터 구조
    - getwd세트 : 행과 열로 이루어진 데이터 구조
	- 행(Row) : 데이터 셑트의 가로 영역(관측치)
	- 열(Column) : 데이터 세트의 세로 영역(변수)
	- 데이터 값(Value) : 관측된 값
  - 변수
    - 변수(Variable) : 다양하게 변할 수 있는 값
    - 할당연산자 : 변수를 할당할때 <-를 사용
	  - R studio 에서 "<-"는 [Alt] + [-]를 누르면 자동 생성됨
	  - ":"(콜론) : 시작 숫자와 마지막 숫자 사이의 1씩 증가하는 연속 값을 변수로 구성함
	    ex) 1:5 - 1,2,3,4,5의 값 출력
	  - c() - 데이터나 객체를 하나로 결합
  - 변수명 생성 규칙
    - 첫 글자는 반드시 영문자 또는 마침표만 사용 가능
	- 두번째 글자 이후로는 영문자, 숫자, 밑줄 사용 가능 
	- 대문자와 소문자 구분
	- 빈칸은 사용 불가
  - Script
    - x <- 10  # 데이터 10을 x 변수에 할당
    - y <- c(1,2,3,4,5) # c() : 여러개의 값을 변수에 할당 할 때 사용자
    - exam <- c(1:10) # 1부터 10까지 1씩 증가하는 연속 값을 변수 exam에 할당
  - 변수의 자료형
    - 숫자형 - 정수와 실수 모두 해당 - num <- c(1,2,-5,11.7)
    - 문자형 - 큰 따옴표 또는 작은 따옴표로 묶어서 표현 - chr <- c("MU", 'Jane')
    - 논리형(TRUE, FALSE) - 참, 거짓을 나타내며, T나 F로 줄여서 사용 가능 - logic <- c(TRUE, FALSE)
    - 특수값 - num_nan <- c(NaN, 3)
      - NA - 결측값(missing value)
      - NULL - 정의되어 있지 않음을 의미
      - NaN - 수학적으로 정의가 불가능한 값(Ex. sqrt(-2))
      - Inf, -Inf - 양의 무한대, 음의 무한대
	- 자료형 확인
      - str(num), str(chr), str(logic), str(num_nam)
	- 변수 값 변경과 산술 연산
      - 변수에 저장된 값은 언제든지 변경 가능 
      - 변수의 자료형은 어떤 값을 저장하는가에 따라 유동적으로 바뀜
	- 산술연산  
	  - a <- 2, b <- 5
	  - a+b
	  - a-b
	  - a*b
	  - a/b
	  - a%/%b  # 나눗셈의 몫
	  - a%%b   # 나눗셈의 나머지
	  - a^b    # a의 b제곱(b승)
# 기초 함수
  - 어떤 데이터 값을 미리 정해 둔 공식에 따라 처리한 결과를 도출하는 기능
  - sum(), mean(), sd(), var(), median(), max(), min()
  - length() - 벡터에 포함된 값들의 개수(길이)
  - range() - 최대값에서 최솟값의 범위

# 논리 연산
  - 논리연산자
    - 논리 연산을 만족하면 TRUE(참)을 출력, 그렇지 않으면 FALSE(거짓) 출력
    - <, <=, >, >=, ==, !=, |, & 	

# 논리 연산
  - 논리 연산자를 활용한 인덱싱 - 논리 연산을 만족하는 TRUE 값을 가지는 위치의 값만 출력됨
  - 인덱싱 - 대괄호 []로 나타냄
    - d[d>=5]  
    - sum(d>=5) # 5보다 크거나 같은 값의 개수를 출력
    - sum(d[d>=5]) # 5보다 크거나 같음 값의 합을 출력	
	- logi_ressult <- d > 5 & d < 8
	  d[logi_result] 

# 매트릭스와 테이터 프레임
  - 매트릭스(matrix) - 데이터 테이블의 모든 셀의 값들이 동일한 자료형
    - matrix() - matrix(입력값, nrow=행의 수, ncol=열의 수)
	- rownames() - 행이름 확인 및 바꾸기
    - colnames() - 열이름 확인 및 바꾸기	
  - 데이터 프레임(data frame) - 자료형이 다른 컬럼들로 구성 
    - data.frame() - data.frame(변수명1, 변수명2, 변수명3, ...)
    	

# 패키지 설치 및 로드
  - 패키지(Package) - 유능한 기능을 가진 함수들을 묶은 함수 꾸러미
  - 패키지 설치 - install.packages("설치할 패키지명")
  - 패키지 로드 : library(로드할 패키지명)
  - 필요한 패키지 찾기
    - CRAN - https://cran.r-project.org/web/packages/available_packages_by_name.html
	- 현재 버전, 만든 사람, 배포 일자 등
  
5. 데이터 분석을 위한 R기초
## 데이터 수집
# 필요한 데이터 어디서 찾을까?
  - 공공데이터
    - 공공데이터 포털 : https://www.data.go.kr
    - 공공기관이 생성 또는 취득하여 관리하고 있는 공공데이터를 한 곳에서 제공하는 통합 창구
  - 지자체 보유 데이터
    - 서울 열린데이터 광장 : https://data.seoul.go.kr  
	- 부산 공공데이터 포털 : https://data.busan.go.kr
	- 대구 데이터 허브 : http://data.daegu.go.kr
  - 공공기관 보유 데이터
    - 각 통계 데이터센터 : https:// data.kostat.go.kr
	- 한국도로공사 공공데이터 포털 : http://data.ex.co.kr
	- 보건의료빅데이터개방시스템 : https://opendata.hira.or.kr
  - 민간데이터  
    - KT 통신빅데이터 플랫폼 : https://bdp.kt.co.kr
    - 금융빅데이터 플랫폼 : https://www.bigdata-finance.kr
      - 비씨카드 및 금융 분야 다수 기업의 빅데이터 플랫폼 구축 사업자로 선정하여 구축한 금융 빅데이터 거래소
  - 공공 + 민간데이터
    - 데이터 스토어 : https://www.datastore.or.kr
    - 데이터 스토어는 누구나 쉽게 데이터를 온라인으로 판매하거나 구매할 수 있는 '데이터오픈마켓'
    - 서비스 개발, 데이터 분석 등 사업에 필요한 데이터를 데이터스토어에서 쉽게 사고 팔 수 있음

## 데이터 불러오기
# 작업 경로 확인 및 R로 데이터 불러오기
  - 주요 함수
    - getwd() - 현재 설정된 작업공간(working directory) 확인
    - setwd() - 새로운 작업공간 설정 
    - read.csv() - csv 형식의 파일 R로 불러오기 
      - read.csv("파일명", header=T)
      - header - 데이터에서 첫번째 행이 변수명인지 아닌지 판단(첫번째 행이 변수명이면 header=TRUE)
  - csv - Comma-Separated Values

# 데이터 저장하기
  - 주요 함수 
    - write.csv - csv 파일로 저장하기 
	  - write.csv(저장할 데이터프레임 이름, file="저장할 파일명.csv")
	- write.table - txt 파일로 저장하기  
	  - write.table(저장할 데이터프레임 이름, file="저장할파일명.txt", sep="," na="NA"
	    - sep : "," 또는 ";" 등 데이터 구분자 입력(tab 구분자는 sep="\t")
		- na - 결측값 있으면 NA로 표시
	  - read.table - txt 파일을 R로 불러오기 
 
# 엑셀 파일 저장하기 및 불러오기
  - 엑셀 파일을 불러오고 엑셀 파일로 저장하기 위해서는 패키지를 설치해야 함수
  - 엑셀 파일로 저장하기(writexl 패키지 설치 및 로드 필요)
    - write.xlsx(저장할 데이터프레임 이름, path="저장할파일명.xlsx")
  - 엑셀 파일을 R로 불러오기(readxl 패키지 설치 및 로드 필요)
    - read_excel(저장할 데이터프레임 이름)

6. 데이터 정제 기법
## 데이터 분석 및 가공
# 데이터 파악 함수
  - View() - 뷰어 창에서 데이터를 확인
  - head(), tail() - 상위 6개, 하위 6개 관측치 미리보기
  - str() - 데이터 구조, 변수 개수, 변수 명, 관찰자 개수, 미리보기
  - dim() - 데이터 차원(행, 열의 개수)
  - names() - 데이터프레임의 변수명(열이름) 확인
  - colnames() - 데이터 프레임의 열이름 확인
  - ls() - 저장되어 있는 객체 모두 출력
  - rm(list=ls()) - 모든 객체 삭제 
  
# 데이터 전처리를 위한 dplyr 패키지
  - 패키지 설치 및 로드 
    - 반드시 dplyr 피키지 설치 및 로드를 해야 아래 함수 사용 가능
	- install.packages("dplyr")
	- library(dplyr)
  - 주요 함수
    - filter()- 지정한 조건식에 맞는 데이터(행) 추출
	          - filter(dataframe, 조건1, 조건2, ...)
              - filter(hf, Month == 1, DayofMonth == 1)
              - filter(hf, Month == 1 | Month == 2)			  
    - select() - 선택한 변수(열)를 추출
    - mutate() - 새로운 변수(열)을 추가(함수 내에서 계산 가능)
    - arrange() - 데이터 정렬(내림차순, 오름차순)
    - distinct() - 중복된 값 제거하기
    - group_by() - 데이터 그룹으로 나누기(summarise() 함수와 함께 사용하면 그룹별 연산이 가능)
    - summarise() - 수치형 값에 대한 요약 통계량 계산
	
  

	  
  