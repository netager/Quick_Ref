1. 자바 기본 익히기
## 자바 프로그래밍 시작하기
## 변수화 자료형(1)
## 변수와 자료형(2)
## 변수와 자료형(3)

## 자바의 여러가지 연산자(1)
# 대입 연산자
  - 변수에 값을 대입하는 연산자
  - 연산의 결과를 변수에 대입 
  - 우선 순위가 가장 낮은 연산자 
  - 왼쪽 변수(lvalue)에 오른쪽 변수(값)(rvalue)를 대입 

# 부호 연산자
  - 단항 연산자
  - 양수/음수의 표현, 값의 부호를 변경 
  - 변수에 +, -를 사용한다고 해서 변수의 값이 변하는 것은 아님
  - 변수의 값을 변경하려면 대입연산자를 사용함.

# 산술 연산자 
  - +, -, *, /, %
  - %는 나머지를 구하는 연산자 
    - 숫자 n의 나머지는 0 ~ n-1 범위의 수 
    - 특정 범위 안의 수를 구할 때 종종 사용

# 증가 감소 연산자 
  - 단항 연산자
  - val = ++num;  // 먼저 num 값에 1 증가후 val 변수에 대입, ;이전에 증가
  - val = num++;  // val 변수에 기존 num값을 대입한후 num 값 1 증가, ;이후에 증가 

# 관계 연산자 
  - 이항 연산자 
  - >, <, >=, <-, ==, != 
  - 결과값은 True or False 

# 논리 연산자
  - 관계 연산자와 혼합하여 많이 사용 됨
  - 연산의 결과가 true(참), false(거짓)으로 반환 됨
  - &&(논리곱), ||(논리합), !(부정)   
  
# 단락 회로 평가(short circuit evaluation)
  - 논리 곱(&&)은 두 항이 모두 true일 때만 결과가 true
    => 앞의 항이 false이면 뒤 항의 결과를 평가하지 않아도 false임 
  - 논리 합(||)은 두 항이 모두 false 일 때만 결과가 false 
    => d앞의 항이 true이면 뒤 항의 결과를 평가하지 않아도 true 임 
	
# 복합 대입 연산자 
  - 대입 연사자와 다른 연산자를 함께 사용함.
  - 프로그램에서 자주 사용하는 연산자 
  - +=, -=, *=, /=, %=  
  
# 조건 연산자 
  - 삼항 연산자 
  - 조건 식의 결과가 true인 경우와 false인 경우에 따라 다른 식이나 결과가 수행됨. 
  - 제어문 중 조건문을 간단히 표현할 때 사용할 수 있음.
  - 조건식 ? 결과1 : 결과2;   
    - int num = (5 > 3) ? 10 : 20;

# 비트 연산자 
  - ~ : 비트의 반전(1의 보수)
  - & : 비트 단위 AND, 1 & 1 이면 1 반환 그외는 0 
  - | : 비트 단위 OR,  0 | 0 이면 0 반환 그외는 1
  - ^ : 비트 단튀 XOR, 두개의 비트가 서로 다른 경우에 1 반환 
  - << : 왼쪽 shift, a << 2 변수 a를 2비트 만큼 왼쪽으로 이동 
  - >> : 오른쪽 shift, a >> 2 변수 a를 2비트만큼 오른쪽 이동
  - >>> : 오른쪽 shift,  >> 동일한 연산자. 채워지는 비트가 부호와 상관없이 0임.
  
  - 비트 연산자는 정수에만 사용할 수 있다.

# 비트 연산자의 활용 
  - 마스크 : 특정 비트들은 가리고 몇 개의 비트들의 값만 사용할 때
  - 비트켜기 : 특정 비트들만을 1로 설정해서 사용하고 싶을 때 
    - 예) & 00001111(하위 4비트 중 1인 비트만 꺼내기)
  - 비트끄기 : 특정 비트들만을 0으로 설정해서 사용하고 싶을 때 
    - 예) | 11110000 (하위 4비트 중 0인 비트만 0으로 만들기)
  - 비트토글 : 모든 비트들을 0은 1로, 1은 0으로 바꾸고 싶을 때 

  
  
  